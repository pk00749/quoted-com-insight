# nginx.conf for stock-api reverse proxy with SSL
# 证书文件挂载到 /etc/nginx/certs 下：
# - /etc/nginx/certs/yorkhxli.site_bundle.pem
# - /etc/nginx/certs/yorkhxli.site.key

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    server_tokens off;

    gzip on;
    gzip_comp_level 5;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript application/xml+rss application/xml text/javascript;

    upstream app {
        server stock-api:8000;  # docker-compose 服务名解析
        keepalive 32;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # HTTP 80：默认跳转到 HTTPS；为健康检查与微信接入保留直通
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # 健康检查直通（避免 301 影响健康检查）
        location = /health {
            proxy_pass http://app/api/v1/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 微信接入验证直通（避免 301 导致平台校验失败）
        location = /wechat/callback {
            proxy_pass http://app/wechat/callback;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 其余全部 301 到 HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 443：反向代理到应用
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name _;

        ssl_certificate     /etc/nginx/certs/yorkhxli.site_bundle.pem;  # 证书链（使用仓库 certs 中现有文件）
        ssl_certificate_key /etc/nginx/certs/yorkhxli.site.key;         # 私钥（使用仓库 certs 中现有文件）
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # 健康检查（HTTPS 直通）
        location = /health {
            proxy_pass http://app/api/v1/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 业务反代
        location / {
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_pass http://app;
        }
    }
}
